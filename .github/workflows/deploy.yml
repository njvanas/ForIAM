name: Deploy + Coverage + Docker

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [main]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: iam
          POSTGRES_PASSWORD: iam
          POSTGRES_DB: iam
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install backend dependencies
      working-directory: ./backend
      run: go mod tidy

    - name: Run backend tests with coverage
      working-directory: ./backend
      run: |
        go test -coverprofile=coverage.out ./...
        go tool cover -func=coverage.out

    - name: Upload Go coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./backend/coverage.out
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm install

    - name: Run frontend tests with coverage
      working-directory: ./frontend
      run: npm run test

    - name: Run frontend build
      working-directory: ./frontend
      run: npm run build

  docker:
    runs-on: ubuntu-latest
    needs: test-and-build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v3

    - name: Log in to DockerHub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and Push Backend
      run: |
        docker build -t foriam/backend:${{ github.ref_name }} ./backend
        docker push foriam/backend:${{ github.ref_name }}

    - name: Build and Push Frontend
      run: |
        docker build -t foriam/frontend:${{ github.ref_name }} ./frontend
        docker push foriam/frontend:${{ github.ref_name }}
